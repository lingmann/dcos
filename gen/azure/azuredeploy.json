{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "eula": "http://docs.mesosphere.com/community-edition-eula/"
  },
  "parameters": {
    "sshKeyData": {
      "type": "string",
      "metadata": {
        "Description": "Public key for SSH authentication"
      },
      "defaultValue": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDmg2uuk5tta2sC//1uPYkRIRnekIEj7hA+oElyJgUNPQhzAIC7aspnYa/ChI/o6pEk4LdacXL2rW6twg8Dnd+n+AUpNfFOWe5yG8oTGhBVpvhr9c0NYgbTCzAEJaFHBeA8JfjpXpwDzDIsSa0wY3dfsu3BATReOVh9J9L9gEr3uj076avbXase/C6IYZndWwZbPXnTUEQiDsdh6kWWp2yuRJ2WVqnImvBk15bZBGI7EhadPuai87ZziG1A/6k2dgRV3nOQXPrUAwrdVG6vLig8k8lHnmpMs/QAqHQD+7BnnlUicMSJutvPB0SbeNVT0yY1eRc62NdFqu7e+w9VrcGh"
    },
    "authorizedSubnet": {
      "type": "string",
      "metadata": {
        "Description": "Subnet allowed to talk to masters"
      },
      "defaultValue": "0.0.0.0/0"
    },
    "region": {
      "type": "string",
      "defaultValue": "West US",
      "allowedValues": [
        "East US",
        "West US",
        "West Europe",
        "East Asia",
        "Southeast Asia"
      ]
    },
    "numberOfMasters": {
      "type": "int",
      "metadata": {
        "Description": "Number of Master nodes"
      },
      "defaultValue": 1,
      "allowedValues": [
        1,
        3,
        5,
        7
      ]
    },
    "numberOfPrivateSlaves": {
      "type": "int",
      "metadata": {
        "Description": "Number of Private Slave nodes"
      },
      "defaultValue": 5,
      "allowedValues": [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40 ]
    },
    "numberOfPublicSlaves": {
      "type": "int",
      "metadata": {
        "Description": "Number of Public Slave nodes"
      },
      "defaultValue": 1,
      "allowedValues": [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40 ]
    },
    "vmsPerStorageAccount": {
      "type": "int",
      "metadata": {
        "Description": "Number of VMs per Storage Account"
      },
      "defaultValue": 10,
      "allowedValues": [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40 ]
    }
  },
  "variables": {
    "adminUsername": "core",
    "uniqueName": "[resourceGroup().name]",
    "storageAccountName": "[concat(variables('uniqueName'), 'dcsan')]",
    "virtualNetworkName": "[concat(variables('uniqueName'), 'dcvn')]",
    "masterSecurityGroupName": "[concat(variables('uniqueName'), 'mstrsg')]",
    "slavePublicSecurityGroupName": "[concat(variables('uniqueName'), 'spubsg')]",
    "slavePrivateSecurityGroupName": "[concat(variables('uniqueName'), 'sprisg')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "sshKeyPath": "[concat('/home/',variables('adminUsername'),'/.ssh/authorized_keys')]",
    "publicSubnetName": "PublicSubnet",
    "publicSubnetRef": "[concat(variables('vnetID'),'/subnets/',variables('publicSubnetName'))]",
    "publicSubnetPrefix": "10.0.4.0/22",
    "privateSubnetName": "PrivateSubnet",
    "privateSubnetRef": "[concat(variables('vnetID'),'/subnets/',variables('privateSubnetName'))]",
    "privateSubnetPrefix": "10.0.0.0/22",
    "addressPrefix": "10.0.0.0/16",
    "vmSize": "Standard_A5",
    "coreosVersion": "766.4.0",
    "internalMasterLoadBalancerName": "internalMasterLoadBalancer",
    "internalMasterLoadBalancerID": "[resourceId('Microsoft.Network/loadBalancers',variables('internalMasterLoadBalancerName'))]",
    "storageAccountsCount": "[add(div(parameters('numberOfPrivateSlaves'),parameters('vmsPerStorageAccount')),mod(add(mod(parameters('numberOfPrivateSlaves'), parameters('vmsPerStorageAccount')),2), add(mod(parameters('numberOfPrivateSlaves'), parameters('vmsPerStorageAccount')),1)))]",
    "storageAccountType": "Standard_LRS",
    "storageAccountPrefix": [
        "0","6","c","i","o","u","1","7","d","j","p","v",
        "2","8","e","k","q","w","3","9","f","l","r","x",
        "4","a","g","m","s","y","5","b","h","n","t","z"
    ],
    "storageAccountPrefixCount": "[length(variables('storageAccountPrefix'))]"
  },
  "resources": [
    {
       "apiVersion": "2015-05-01-preview",
       "location": "[parameters('region')]",
       "name": "[variables('storageAccountName')]",
       "properties": {
          "accountType": "[variables('storageAccountType')]"
       },
       "type": "Microsoft.Storage/storageAccounts"
    },
    {
      "apiVersion": "2015-05-01-preview",
      "copy": {
        "name": "vmLoopNode",
        "count": "[variables('storageAccountsCount')]"
      },
      "location": "[parameters('region')]",
      "name": "[concat(variables('storageAccountPrefix')[mod(copyIndex(),variables('storageAccountPrefixCount'))],variables('storageAccountPrefix')[div(copyIndex(),variables('storageAccountPrefixCount'))],variables('uniqueName'),copyIndex(1))]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      },
      "type": "Microsoft.Storage/storageAccounts"
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "masters",
      "location": "[parameters('region')]",
      "properties": {}
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('slavePublicSecurityGroupName')]",
      "location": "[parameters('region')]",
      "properties": {
        "securityRules": [
          {
            "name": "Allow_Azure_Management",
            "properties": {
              "description": "Allow Azure Internal Management Traffic",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "168.63.129.16/32",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "Block_SSH",
            "properties": {
              "description": "Block access to SSH to Public Slaves",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 200,
              "direction": "Inbound"
            }
          },
          {
            "name": "Block_Mesos_Agent",
            "properties": {
              "description": "Block access to Mesos Slave process to Public Slaves",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "5051",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 300,
              "direction": "Inbound"
            }
          },
          {
            "name": "Allow_Internet",
            "properties": {
              "description": "Allow Internet traffic to Public Slave Agents",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 400,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('slavePrivateSecurityGroupName')]",
      "location": "[parameters('region')]",
      "properties": {
        "securityRules": [
          {
            "name": "Allow_Azure_Management",
            "properties": {
              "description": "Allow Azure Internal Management Traffic",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "168.63.129.16/32",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('masterSecurityGroupName')]",
      "location": "[parameters('region')]",
      "properties": {
        "securityRules": [
          {
            "name": "Allow_Azure_Management",
            "properties": {
              "description": "Allow Azure Internal Management Traffic",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "168.63.129.16/32",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "Allow_Subnet",
            "properties": {
              "description": "Allow Subnet",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "[parameters('authorizedSubnet')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('region')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('privateSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('privateSubnetPrefix')]"
            }
          },
          {
            "name": "[variables('publicSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('publicSubnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat('slavePublicIP', copyindex())]",
      "copy": {
        "name": "ipLoop",
        "count": "[parameters('numberOfPublicSlaves')]"
      },
      "location": "[parameters('region')]",
      "apiVersion": "2015-06-15",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[concat('slavepublic', copyindex(), '-', variables('uniqueName'))]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat('slavePublicNic', copyindex())]",
      "location": "[parameters('region')]",
      "copy": {
        "name": "slavePublicNicLoop",
        "count": "[parameters('numberOfPublicSlaves')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('slavePublicSecurityGroupName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIpAddresses', concat('slavePublicIP', copyindex()))]"
              },
              "subnet": {
                "id": "[variables('publicSubnetRef')]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('slavePublicSecurityGroupName'))]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat('slavePublic', copyindex())]",
      "location": "[parameters('region')]",
      "copy": {
        "name": "slavePublicVMLoop",
        "count": "[parameters('numberOfPublicSlaves')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', 'slavePublicNic', copyindex())]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computername": "[concat('slavepublic', copyIndex())]",
          "adminUsername": "[variables('adminUsername')]",
          "customData": {{ slave_public_cloud_config }},
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "path": "[variables('sshKeyPath')]",
                  "keyData": "[parameters('sshKeyData')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "CoreOS",
            "offer": "CoreOS",
            "sku": "stable",
            "version": "[variables('coreosVersion')]"
          },
          "osDisk": {
            "name": "[concat('slavePublicVhd', copyindex())]",
            "vhd": {
              "uri": "[concat('http://',concat(variables('storageAccountPrefix')[mod(copyIndex(),variables('storageAccountPrefixCount'))],variables('storageAccountPrefix')[div(copyIndex(),variables('storageAccountPrefixCount'))],variables('uniqueName'),copyIndex(1)),'.blob.core.windows.net/vhds/','slavePrivateVhd', copyindex(),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat('slavePublicNic', copyindex()))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "microsoft.network/networkInterfaces",
      "name": "[concat('slaveprivatenic', copyindex())]",
      "location": "[parameters('region')]",
      "copy": {
        "name": "slaveprivatenicloop",
        "count": "[parameters('numberOfPrivateSlaves')]"
      },
      "dependson": [
        "[concat('microsoft.network/virtualNetworks/', variables('virtualnetworkname'))]",
        "[concat('microsoft.network/networkSecurityGroups/', variables('slavePrivateSecurityGroupName'))]"
      ],
      "properties": {
        "ipconfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateipallocationmethod": "dynamic",
              "subnet": {
                "id": "[variables('privatesubnetref')]"
              }
            }
          }
        ],
        "networksecuritygroup": {
          "id": "[resourceid('microsoft.network/networkSecurityGroups', variables('slavePrivateSecurityGroupName'))]"
        }
      }
    },
    {
      "apiversion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat('slavePrivate', copyindex())]",
      "location": "[parameters('region')]",
      "copy": {
        "name": "slavePrivateVMLoop",
        "count": "[parameters('numberofprivateslaves')]"
      },
      "dependson": [
        "[concat('microsoft.network/networkInterfaces/', 'slavePrivateNic', copyindex())]",
        "[concat('Microsoft.Storage/storageAccounts/',concat(variables('storageAccountPrefix')[mod(copyIndex(),variables('storageAccountPrefixCount'))],variables('storageAccountPrefix')[div(copyIndex(),variables('storageAccountPrefixCount'))],variables('uniquename'),copyIndex(1)))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computername": "[concat('slaveprivate', copyIndex())]",
          "adminUsername": "[variables('adminUsername')]",
          "customData": {{ slave_cloud_config }},
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "path": "[variables('sshKeyPath')]",
                  "keyData": "[parameters('sshKeyData')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "CoreOS",
            "offer": "CoreOS",
            "sku": "stable",
            "version": "[variables('coreosVersion')]"
          },
          "osDisk": {
            "name": "[concat('slavePrivateVhd', copyindex())]",
            "vhd": {
              "uri": "[concat('http://',variables('storageAccountPrefix')[div(copyIndex(),variables('storageAccountPrefixCount'))],variables('uniqueName'),variables('storageAccountPrefix')[mod(copyIndex(),variables('storageAccountsCount'))],'.blob.core.windows.net/vhds/','slavePrivateVhd', copyindex(),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat('slavePrivateNic', copyindex()))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat('masterPublicIP', copyindex())]",
      "copy": {
        "name": "ipLoop",
        "count": "[parameters('numberOfMasters')]"
      },
      "location": "[parameters('region')]",
      "apiVersion": "2015-06-15",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[concat('master', copyindex(), '-', variables('uniqueName'))]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat('masterNodeNic', copyindex())]",
      "location": "[parameters('region')]",
      "copy": {
        "name": "masterNicLoop",
        "count": "[parameters('numberOfMasters')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Network/publicIPAddresses/', 'masterPublicIP', copyindex())]",
        "[concat('Microsoft.Network/loadBalancers/', variables('internalMasterLoadBalancerName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('masterSecurityGroupName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIpAddresses', concat('masterPublicIP', copyindex()))]"
              },
              "subnet": {
                "id": "[variables('publicSubnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('internalMasterLoadBalancerID'), '/backendAddressPools/BackendPool1')]"
                }
              ]
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('masterSecurityGroupName'))]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat('master', copyindex())]",
      "location": "[parameters('region')]",
      "copy": {
        "name": "masterVmLoop",
        "count": "[parameters('numberOfMasters')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', 'masterNodeNic', copyindex())]",
        "[concat('Microsoft.Compute/availabilitySets/', 'masters')]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', 'masters')]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computername": "[concat('master', copyIndex())]",
          "adminUsername": "[variables('adminUsername')]",
          "customData": {{ master_cloud_config }},
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "path": "[variables('sshKeyPath')]",
                  "keyData": "[parameters('sshKeyData')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "CoreOS",
            "offer": "CoreOS",
            "sku": "stable",
            "version": "[variables('coreosVersion')]"
          },
          "osDisk": {
            "name": "[concat('masterNodeVhd', copyindex())]",
            "vhd": {
              "uri": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net/vhds/','masterNodeVhd', copyindex(),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat('masterNodeNic', copyindex()))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/loadBalancers",
      "name": "[variables('internalMasterLoadBalancerName')]",
      "location": "[parameters('region')]",
      "dependsOn": [
        "[variables('vnetID')]"
      ],
      "properties": {
        "frontendIpConfigurations": [
          {
            "properties": {
              "subnet": {
                "Id": "[variables('publicSubnetRef')]"
              },
              "privateIPAllocationMethod": "Dynamic"
            },
            "name": "LoadBalancerFrontend"
          }
        ],
        "backendAddressPools": [
          {
            "name": "BackendPool1"
          }
        ],
        "loadBalancingRules": [
          {
            "properties": {
              "frontendIPConfiguration": {
                "Id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalMasterLoadBalancerName')), '/frontendIpConfigurations/LoadBalancerFrontend')]"
              },
              "backendAddressPool": {
                "Id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalMasterLoadBalancerName')), '/backendAddressPools/BackendPool1')]"
              },
              "probe": {
                "Id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('internalMasterLoadBalancerName')), '/probes/exhibitor')]"
              },
              "protocol": "Tcp",
              "frontendPort": 8181,
              "backendPort": 8181,
              "idleTimeoutInMinutes": 15
            },
            "Name": "exhibitor"
          }
        ],
        "probes": [
          {
            "properties": {
              "protocol": "Tcp",
              "port": 8181,
              "intervalInSeconds": 15,
              "numberOfProbes": 2
            },
            "name": "exhibitor"
          }
        ]
      }
    }
  ],
  "outputs": {
    "masterFQDN0": {
      "value": "[reference('masterPublicIP0').dnsSettings.fqdn]",
      "type": "string"
    },
    "slavePublicFQDN0": {
      "value": "[reference('slavePublicIP0').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}

#!/bin/bash

mkdir -p "/build"

export CXXFLAGS=-I/opt/mesosphere/include

# TODO(cmaloney): Set alternate log, config paths?
pushd "/pkg/src/nginx"
./configure \
  "--prefix=$PKG_PATH" \
  --with-cc-opt="-I /opt/mesosphere/include" \
  --with-ld-opt="-L /opt/mesosphere/lib -Wl,-rpath=/opt/mesosphere/lib" \
  --with-ipv6 \
  --with-file-aio \
  --with-http_gunzip_module \
  --with-http_gzip_static_module \
  --with-http_spdy_module \
  --without-mail_pop3_module \
  --without-mail_imap_module \
  --without-mail_smtp_module \
  --with-http_ssl_module \
  --with-luajit

make -j8
make install

popd

pushd "/pkg/src/adminrouter"

nginx_config_path="$PKG_PATH/nginx/conf"
mkdir -p $nginx_config_path
cp nginx.conf $nginx_config_path/
cp snakeoil.crt $nginx_config_path/
cp snakeoil.key $nginx_config_path/
cp *.lua $nginx_config_path/

# Copy OpenResty Lua modules.
if [ -d resty ]; then
    cp -r resty $nginx_config_path/
fi


popd

# Copy  in needed libraries
mkdir -p "$PKG_PATH/lib"
cp /lib/x86_64-linux-gnu/libpcre.so.3 "$PKG_PATH/lib/libpcre.so.3"

# From: https://projects.archlinux.org/svntogit/packages.git/tree/trunk/service?h=packages/nginx
systemd_master="$PKG_PATH"/dcos.target.wants_master/dcos-nginx.service
mkdir -p "$(dirname "$systemd_master")"
cat <<EOF > "$systemd_master"
[Unit]
Description=A high performance web server and a reverse proxy server
After=dcos-mesos-dns.service

[Service]
Restart=always
StartLimitInterval=0
RestartSec=5
EnvironmentFile=/etc/environment
EnvironmentFile=/opt/mesosphere/environment
Type=forking
PIDFile=$PKG_PATH/nginx/logs/nginx.pid
PrivateDevices=yes
StandardOutput=journal
StandardError=journal
ExecStart=$PKG_PATH/nginx/sbin/nginx
ExecReload=/usr/bin/kill -HUP \$MAINPID
KillSignal=SIGQUIT
KillMode=mixed
EOF

systemd_master_reload="$PKG_PATH"/dcos.target.wants_master/dcos-nginx-reload.service
mkdir -p "$(dirname "$systemd_master_reload")"
cat <<EOF > "$systemd_master_reload"
[Unit]
Description=Reload nginx

[Service]
Type=oneshot
EnvironmentFile=/etc/environment
EnvironmentFile=/opt/mesosphere/environment
ExecStart=-$PKG_PATH/nginx/sbin/nginx -s reload
EOF

systemd_master_timer="$PKG_PATH"/dcos.target.wants_master/dcos-nginx-reload.timer
mkdir -p "$(dirname "$systemd_master_timer")"
cat <<EOF > "$systemd_master_timer"
[Unit]
Description=Periodically reload nginx config to pickup new dns
[Timer]
OnBootSec=0min
OnUnitActiveSec=30s
EOF

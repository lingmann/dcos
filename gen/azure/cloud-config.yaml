write_files:
  - path: /etc/mesosphere/setup-packages/dcos-provider-azure--setup/pkginfo.json
    content: |
      {
        "environment": {
          "PROVIDER": "azure"
        }
      }
  - path: /etc/mesosphere/setup-packages/dcos-provider-azure--setup/etc/cloudenv
    content: |
      # TODO(cmaloney): Add cluster general info for analytics here
      ZOOKEEPER_CLUSTER_SIZE={{ num_masters }}
  - path: /etc/mesosphere/setup-packages/dcos-provider-azure--setup/etc/mesos-master-provider
    # TODO(cmaloney): MESOS_HOSTNAME, MESOS_IP break upgrade paths
    content: |
      MESOS_CLUSTER=[[[variables('uniqueName')]]]
  - path: /etc/mesosphere/setup-packages/dcos-provider-azure--setup/etc/exhibitor
    content: |
      EXHIBITOR_BACKEND=AZURE
      AZURE_CONTAINER=dcos-exhibitor
      AZURE_PREFIX=[[[variables('uniqueName')]]]
  - path: /etc/mesosphere/setup-packages/dcos-provider-azure--setup/etc/exhibitor.properties
    content: |
      com.netflix.exhibitor.azure.account-name=[[[variables('storageAccountName')]]]
      com.netflix.exhibitor.azure.account-key=[[[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1]]]
  - path: /etc/mesosphere/setup-packages/dcos-provider-azure--setup/etc/dns_config
    content: |
      MASTER_SOURCE=exhibitor
      # TODO(cmaloney): Switch to VRRP or an internal master load balancer
      EXHIBITOR_ADDRESS=[[[reference('internalMasterLoadBalancer').frontendIPConfigurations[0].properties.privateIPAddress]]]
      RESOLVERS={{ resolvers_str }}
coreos:
  units:
    - name: var-lib.mount
      command: start
      content: |
        [Unit]
        Description=Mount /var/lib
        Before=dbus.service
        [Mount]
        What=/dev/sdb1
        Where=/var/lib
        Type=ext4
    - name: config-writer.service
      command: start
      content: |
        [Unit]
        Description=Write out dynamic config values
        [Service]
        Type=oneshot
        EnvironmentFile=/etc/environment
        # Marathon depends on `hostname` resolution working
        ExecStart=/usr/bin/bash -c "echo $private_ipv4 $(hostname) > /etc/hosts"

{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines (SSH or Password)."
      }
    },
    "linuxAdminPassword": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Password for the Linux Virtual Machine.  Not Required.  If not set, you must provide a SSH key."
      }
    },
    "sshRSAPublicKey": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines.  Not Required.  If not set, you must provide a password key."
      }
    },
    "windowsAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Windows Virtual Machine (Password Only Supported)."
      }
    },
    "windowsAdminPassword": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Password for the Windows Virtual Machine."
      }
    },
    "masterEndpointDNSNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Sets the Domain name label for the master IP Address.  The concatenation of the domain name label and the regional DNS zone make up the fully qualified domain name associated with the public IP address."
      }
    },
    "agentEndpointDNSNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Sets the Domain name label for the agent pool IP Address.  The concatenation of the domain name label and the regional DNS zone make up the fully qualified domain name associated with the public IP address."
      }
    },
    "agentCount": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "The number of Mesos agents for the cluster.  This value can be from 1 to 100"
      },
      "allowedValues": [
        1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,
        21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,
        41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,
        61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,
        81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100
      ]
    },
    "masterCount": {
      "type": "int",
      "defaultValue": 1,
      "allowedValues": [
        1,
        3,
        5
      ],
      "metadata": {
        "description": "The number of Mesos masters for the cluster."
      }
    },
    "agentVMSize": {
      "type": "string",
      "defaultValue": "Standard_A1",
      "allowedValues": [
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4"
      ],
      "metadata": {
        "description": "The size of the Virtual Machine. Allowable machine values are 1 core (A1), 2 core (A2), 4 core (A3), 8 core (A4)."
      }
    },
    "linuxPublisher": {
      "type": "string",
      "defaultValue": "Canonical",
      "metadata": {
        "description": "This is the publisher of the image used by the linux cluster"
      }
    },
    "linuxOffer": {
      "type": "string",
      "defaultValue": "UbuntuServer",
      "metadata": {
        "description": "This is the offer of the image used by the linux cluster"
      }
    },
    "linuxSku": {
      "type": "string",
      "defaultValue": "15.10",
      "metadata": {
        "description": "This is the linux sku used by the linux cluster"
      }
    },
    "linuxVersion": {
      "type": "string",
      "defaultValue": "latest",
      "metadata": {
        "description": "This is the linux version used by the linux cluster"
      }
    },
    "windowsPublisher": {
      "type": "string",
      "defaultValue": "MicrosoftVisualStudio",
      "metadata": {
        "description": "This is the windows publisher used by the windows"
      }
    },
    "windowsOffer": {
      "type": "string",
      "defaultValue": "VisualStudio",
      "metadata": {
        "description": "This is the windows offer used by the windows"
      }
    },
    "windowsSku": {
      "type": "string",
      "defaultValue": "VS-2015-Enterprise-AzureSDK-2.7-WS2012R2",
      "metadata": {
        "description": "This is the windows sku used by the windows"
      }
    },
    "isValidation": {
      "type": "int",
      "defaultValue": 0,
      "allowedValues": [
        0,
        1
      ],
      "metadata": {
        "description": "This is testing in the validation region"
      }
    },
    "disablePasswordAuthentication": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "This setting controls whether password auth is disabled for Linux VMs provisioned by this template. Default is true which disables password and makes SSH key required."
      }
    },
    "setLinuxConfigurationForVMCreate": {
      "type": "int",
      "defaultValue": 1,
      "allowedValues": [
        0,
        1
      ],
      "metadata": {
        "description": "This setting controls whether Linux configuration with SSH Key is passed in VM PUT Payload.  Defaults to 1.  If SSH Key is blank, this must be set to 0."
      }
    },
    "nameSuffix": {
      "type": "string",
      "defaultValue": "01234567",
      "metadata": {
        "description": "A string to include in the names of resources created.  Defaults to 0.  Can not be blank."
      }
    },
    "vmsPerStorageAccount": {
      "type": "int",
      "defaultValue": 5,
      "metadata": {
        "description": "This specifies the number of VMs per storage accounts"
      }
    },
    "postInstallScriptURI": {
      "type": "string",
      "defaultValue": "disabled",
      "metadata": {
        "description": "After installation, this specifies a script to download and install.  To disabled, set value to 'disabled'."
      }
    }
  },
  "variables": {
    "adminUsername": "[parameters('linuxAdminUsername')]",
    "adminPassword": "[parameters('linuxAdminPassword')]",
    "masterEndpointDNSNamePrefix": "[tolower(parameters('masterEndpointDNSNamePrefix'))]",
    "agentEndpointDNSNamePrefix": "[tolower(parameters('agentEndpointDNSNamePrefix'))]",
    "agentPublicVMSSCount": 1,
    "agentPrivateVMSSCount": 1,
    "agentPublicCount": "[parameters('agentCount')]",
    "agentPrivateCount": "[parameters('agentCount')]",
    "masterCount": "[parameters('masterCount')]",
    "agentVMSize": "[parameters('agentVMSize')]",
    "sshRSAPublicKey": "[parameters('sshRSAPublicKey')]",
    "linuxPublisher": "[parameters('linuxPublisher')]",
    "linuxOffer": "[parameters('linuxOffer')]",
    "linuxSku": "[parameters('linuxSku')]",
    "linuxVersion": "[parameters('linuxVersion')]",
    "windowsPublisher": "[parameters('windowsPublisher')]",
    "windowsOffer": "[parameters('windowsOffer')]",
    "windowsSku": "[parameters('windowsSku')]",
    "windowsAdminUsername": "[parameters('windowsAdminUsername')]",
    "windowsAdminPassword": "[parameters('windowsAdminPassword')]",
    "vmsPerStorageAccount": "[parameters('vmsPerStorageAccount')]",
    "postInstallScriptURI": "[parameters('postInstallScriptURI')]",
    "nameSuffix": "[parameters('nameSuffix')]",
    "isValidation": "[parameters('isValidation')]",
    "storageLocations": [
      "[resourceGroup().location]",
      "East US 2 (Stage)"
    ],
    "storageLocation": "[variables('storageLocations')[variables('isValidation')]]",
    "sshKeyPath": "[concat('/home/', variables('adminUsername'), '/.ssh/authorized_keys')]",
    "disablePasswordAuthentication": "[parameters('disablePasswordAuthentication')]",
    "setLinuxConfigurationForVMCreate": "[parameters('setLinuxConfigurationForVMCreate')]",
    "linuxConfigurations": [
      {},
      {
        "disablePasswordAuthentication": "[variables('disablePasswordAuthentication')]",
        "ssh": {
          "publicKeys": [
            {
              "path": "[variables('sshKeyPath')]",
              "keyData": "[variables('sshRSAPublicKey')]"
            }
          ]
        }
      }
    ],
    "linuxConfiguration": "[variables('linuxConfigurations')[variables('setLinuxConfigurationForVMCreate')]]",
    "orchestratorName": "mesos",
    "masterPublicIPAddressName": "[concat(variables('orchestratorName'), '-master-ip-', variables('masterEndpointDNSNamePrefix'), '-', variables('nameSuffix'))]",
    "agentPublicIPAddressName": "[concat(variables('orchestratorName'), '-agent-ip-', variables('agentEndpointDNSNamePrefix'), '-', variables('nameSuffix'))]",
    "marathonEnabled": true,
    "chronosEnabled": true,
    "swarmEnabled": false,
    "osImagePublisher": "[variables('linuxPublisher')]",
    "osImageOffer": "[variables('linuxOffer')]",
    "osImageSKU": "[variables('linuxSku')]",
    "osImageVersion": "[variables('linuxVersion')]",
    "virtualNetworkName": "[concat(variables('orchestratorName'), '-vnet-', variables('nameSuffix'))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "masterSubnetName": "[concat(variables('orchestratorName'), '-masterSubnet')]",
    "masterSubnetRef": "[concat(variables('vnetID'),'/subnets/',variables('masterSubnetName'))]",
    "masterAddressPrefix": "172.16.0.0/24",
    "agentAddressPrefix": "10.0.0.0/8",
    "agentPublicAddressPrefix": "10.32.0.0/11",
    "agentPrivateAddressPrefix": "10.0.0.0/11",
    "agentPublicSubnetName": "[concat(variables('orchestratorName'), '-agentPublicSubnet')]",
    "agentPrivateSubnetName": "[concat(variables('orchestratorName'), '-agentPrivateSubnet')]",
    "storageAccountType": "Standard_GRS",
    "storageAccountPrefixes": [
      "0","6","c","i","o","u","1","7","d","j","p","v",
      "2","8","e","k","q","w","3","9","f","l","r","x",
      "4","a","g","m","s","y","5","b","h","n","t","z"
    ],
    "storageAccountPrefixesCount": "[length(variables('storageAccountPrefixes'))]",
    "storageAccountBaseName": "[concat(uniqueString(variables('masterEndpointDNSNamePrefix')), variables('orchestratorName'))]",
    "agentStoragePublicAccountName": "[concat(uniqueString(variables('masterEndpointDNSNamePrefix')), 'agntpub')]",
    "agentStoragePrivateAccountName": "[concat(uniqueString(variables('masterEndpointDNSNamePrefix')), 'agntpri')]",
    "masterStorageAccountName": "[concat(variables('storageAccountBaseName'), '0')]",
    "omsStorageAccount": "none",
    "omsStorageAccountKey": "none",
    "clusterInstallParameters": "[concat(variables('masterCount'), ' ',variables('masterVMNamePrefix'), ' ',variables('masterFirstAddr'), ' ',variables('swarmEnabled'),' ',variables('marathonEnabled'),' ',variables('chronosEnabled'),' ',variables('omsStorageAccount'),' ',variables('omsStorageAccountKey'),' ', variables('adminUsername'),' ',variables('postInstallScriptURI'))]",
    "setBrowserFirstTabDefaultPrefix": "powershell.exe -ExecutionPolicy Unrestricted -command \"New-Item -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer' ; New-Item -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer\\BrowserEmulation' ; New-ItemProperty -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer\\BrowserEmulation' -Name IntranetCompatibilityMode -Value 0 -Type DWord; New-Item -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer\\Main' ; New-ItemProperty -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer\\Main' -Name 'Start Page' -Type String -Value http://\"",
    "setBrowserFirstTabDefaultSuffix": "0:5050",
    "masterNSGName": "[concat(variables('orchestratorName'), '-master-nsg-', variables('nameSuffix'))]",
    "masterNSGID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('masterNSGName'))]",
    "masterVMNamePrefix": "[concat(variables('orchestratorName'), '-master-', variables('nameSuffix'), '-')]",
    "masterFirstAddr": 5,
    "masterAvailabilitySet": "[concat(variables('orchestratorName'), '-master-availabilitySet-', variables('nameSuffix'))]",
    "masterLbName": "[concat(variables('orchestratorName'), '-master-lb-', variables('nameSuffix'))]",
    "masterVMSize": "Standard_A1",
    "masterLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('masterLbName'))]",
    "masterLbIPConfigName": "[concat(variables('orchestratorName'), '-master-lbFrontEnd-', variables('nameSuffix'))]",
    "masterLbIPConfigID": "[concat(variables('masterLbID'),'/frontendIPConfigurations/', variables('masterLbIPConfigName'))]",
    "masterLbBackendPoolName": "[concat(variables('orchestratorName'), '-master-pool-', variables('nameSuffix'))]",
    "masterCustomScript": "[concat('/bin/bash -c \"/bin/bash /opt/azure/containers/configure-mesos-cluster.sh ',variables('clusterInstallParameters'),' >> /var/log/azure/cluster-bootstrap.log 2>&1\"')]",
    "agentNSGName": "[concat(variables('orchestratorName'), '-agent-nsg-', variables('nameSuffix'))]",
    "agentNSGID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('agentNSGName'))]",
    "agentFirstAddr": 20,
    "agentPublicVMNamePrefix": "[concat(variables('orchestratorName'), '-agent-public-', variables('nameSuffix'), '-')]",
    "agentPrivateVMNamePrefix": "[concat(variables('orchestratorName'), '-agent-private-', variables('nameSuffix'), '-')]",
    "agentAvailabilitySet": "[concat(variables('orchestratorName'), '-agent-availabilitySet-', variables('nameSuffix'))]",
    "agentsPublicLbName": "[concat(variables('orchestratorName'), '-agent-lb-', variables('nameSuffix'))]",
    "agentsPublicLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('agentsPublicLbName'))]",
    "agentsPublicLbIPConfigName": "[concat(variables('orchestratorName'), '-agent-lbFrontEnd-', variables('nameSuffix'))]",
    "agentsPublicLbIPConfigID": "[concat(variables('agentsPublicLbID'),'/frontendIPConfigurations/', variables('agentsPublicLbIPConfigName'))]",
    "agentsPublicLbBackendPoolName": "[concat(variables('orchestratorName'), '-agent-pool-', variables('nameSuffix'))]",
    "agentPublicStorageAccountNamePrefix": "agentpub0",
    "agentStorageAccountsCount": 20,
    "agentsPerIPv4Octet": 200,
    "agentCustomScript": "[concat('/usr/bin/nohup /bin/bash -c \"/bin/bash /opt/azure/containers/configure-mesos-cluster.sh ',variables('clusterInstallParameters'),' >> /var/log/azure/cluster-bootstrap.log 2>&1 &\" &')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('masterStorageAccountName')]",
      "apiVersion": "2015-06-15",
      "location": "[variables('storageLocation')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('masterAddressPrefix')]",
            "[variables('agentAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('masterSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('masterAddressPrefix')]"
            }
          },
          {
            "name": "[variables('agentPublicSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('agentPublicAddressPrefix')]"
            }
          },
          {
            "name": "[variables('agentPrivateSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('agentPrivateAddressPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('masterAvailabilitySet')]",
      "location": "[resourceGroup().location]",
      "properties": {}
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('masterPublicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('masterEndpointDNSNamePrefix')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "name": "[variables('masterLbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('masterLbIPConfigName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('masterPublicIPAddressName'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('masterLbBackendPoolName')]"
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/loadBalancers/inboundNatRules",
      "name": "[concat(variables('masterLbName'), '/', 'SSH-', variables('masterVMNamePrefix'), copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "masterLbLoopNode",
        "count": "[variables('masterCount')]"
      },
      "dependsOn": [
        "[variables('masterLbID')]"
      ],
      "properties": {
        "frontendIPConfiguration": {
          "id": "[variables('masterLbIPConfigID')]"
        },
        "protocol": "tcp",
        "frontendPort": "[copyIndex(2200)]",
        "backendPort": 22,
        "enableFloatingIP": false
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('masterNSGName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('masterVMNamePrefix'), 'nic-', copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoopNode",
        "count": "[variables('masterCount')]"
      },
      "dependsOn": [
        "[variables('masterLbID')]",
        "[variables('vnetID')]",
        "[concat(variables('masterLbID'),'/inboundNatRules/SSH-',variables('masterVMNamePrefix'),copyIndex())]",
        "[variables('masterNSGID')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[variables('masterNSGID')]"
        },
        "ipConfigurations": [
          {
            "name": "ipConfigNode",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat(split(variables('masterAddressPrefix'),'0/24')[0], copyIndex(variables('masterFirstAddr')))]",
              "subnet": {
                "id": "[variables('masterSubnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('masterLbID'), '/backendAddressPools/', variables('masterLbBackendPoolName'))]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(variables('masterLbID'),'/inboundNatRules/SSH-',variables('masterVMNamePrefix'),copyIndex())]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('masterVMNamePrefix'), copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmLoopNode",
        "count": "[variables('masterCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('masterVMNamePrefix'), 'nic-', copyIndex())]",
        "[concat('Microsoft.Compute/availabilitySets/',variables('masterAvailabilitySet'))]",
        "[variables('masterStorageAccountName')]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('masterAvailabilitySet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('masterVMSize')]"
        },
        "osProfile": {
          "computername": "[concat(variables('masterVMNamePrefix'), copyIndex())]",
          "adminUsername": "[variables('adminUsername')]",
          "adminPassword": "[variables('adminPassword')]",
          "customData": {{ master_cloud_config }},
          "linuxConfiguration": "[variables('linuxConfiguration')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('osImagePublisher')]",
            "offer": "[variables('osImageOffer')]",
            "sku": "[variables('osImageSKU')]",
            "version": "[variables('osImageVersion')]"
          },
          "osDisk": {
            "name": "[concat(variables('masterVMNamePrefix'), copyIndex(),'-osdisk')]",
            "vhd": {
              "uri": "[concat('http://', variables('masterStorageAccountName'), '.blob.core.windows.net/vhds/', variables('masterVMNamePrefix'), copyIndex(), '-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('masterVMNamePrefix'), 'nic-', copyIndex()))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[concat(variables('storageAccountPrefixes')[mod(copyIndex(),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(copyIndex(),variables('storageAccountPrefixesCount'))],variables('agentStoragePublicAccountName'),copyIndex())]",
      "apiVersion": "2015-06-15",
      "location": "[variables('storageLocation')]",
      "copy": {
        "name": "agentPublicLoopNode",
        "count": "[variables('agentStorageAccountsCount')]"
      },
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('agentPublicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('agentEndpointDNSNamePrefix')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "name": "[variables('agentsPublicLbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('agentPublicIPAddressName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('agentsPublicLbIPConfigName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('agentPublicIPAddressName'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('agentsPublicLbBackendPoolName')]"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "LBRuleHTTP",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('agentsPublicLbIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[concat(variables('agentsPublicLbID'), '/backendAddressPools/', variables('agentsPublicLbBackendPoolName'))]"
              },
              "protocol": "tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "Default",
              "probe": {
                "id": "[concat(variables('agentsPublicLbID'),'/probes/tcpHTTPProbe')]"
              }
            }
          },
          {
            "name": "LBRuleHTTPS",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('agentsPublicLbIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[concat(variables('agentsPublicLbID'), '/backendAddressPools/', variables('agentsPublicLbBackendPoolName'))]"
              },
              "protocol": "tcp",
              "frontendPort": 443,
              "backendPort": 443,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "Default",
              "probe": {
                "id": "[concat(variables('agentsPublicLbID'),'/probes/tcpHTTPSProbe')]"
              }
            }
          },
          {
            "name": "LBRulePort8080",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('agentsPublicLbIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[concat(variables('agentsPublicLbID'), '/backendAddressPools/', variables('agentsPublicLbBackendPoolName'))]"
              },
              "protocol": "tcp",
              "frontendPort": 8080,
              "backendPort": 8080,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "Default",
              "probe": {
                "id": "[concat(variables('agentsPublicLbID'),'/probes/tcpPort8080Probe')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "tcpHTTPProbe",
            "properties": {
              "protocol": "tcp",
              "port": 80,
              "intervalInSeconds": "5",
              "numberOfProbes": "2"
            }
          },
          {
            "name": "tcpHTTPSProbe",
            "properties": {
              "protocol": "tcp",
              "port": 443,
              "intervalInSeconds": "5",
              "numberOfProbes": "2"
            }
          },
          {
            "name": "tcpPort8080Probe",
            "properties": {
              "protocol": "tcp",
              "port": 8080,
              "intervalInSeconds": "5",
              "numberOfProbes": "2"
            }
          }
        ],
        "inboundNatRules": []
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "apiVersion": "2015-06-15",
      "name": "[concat(variables('agentPublicVMNamePrefix'), 'vmss', copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "masterLbLoopNode",
        "count": "[variables('agentPublicVMSSCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(0,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(0,variables('storageAccountPrefixesCount'))],variables('agentStoragePublicAccountName'),0)]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(1,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(1,variables('storageAccountPrefixesCount'))],variables('agentStoragePublicAccountName'),1)]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(2,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(2,variables('storageAccountPrefixesCount'))],variables('agentStoragePublicAccountName'),2)]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(3,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(3,variables('storageAccountPrefixesCount'))],variables('agentStoragePublicAccountName'),3)]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(4,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(4,variables('storageAccountPrefixesCount'))],variables('agentStoragePublicAccountName'),4)]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(5,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(5,variables('storageAccountPrefixesCount'))],variables('agentStoragePublicAccountName'),5)]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(6,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(6,variables('storageAccountPrefixesCount'))],variables('agentStoragePublicAccountName'),6)]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(7,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(7,variables('storageAccountPrefixesCount'))],variables('agentStoragePublicAccountName'),7)]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(8,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(8,variables('storageAccountPrefixesCount'))],variables('agentStoragePublicAccountName'),8)]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(9,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(9,variables('storageAccountPrefixesCount'))],variables('agentStoragePublicAccountName'),9)]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(10,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(10,variables('storageAccountPrefixesCount'))],variables('agentStoragePublicAccountName'),10)]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(11,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(11,variables('storageAccountPrefixesCount'))],variables('agentStoragePublicAccountName'),11)]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(12,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(12,variables('storageAccountPrefixesCount'))],variables('agentStoragePublicAccountName'),12)]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(13,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(13,variables('storageAccountPrefixesCount'))],variables('agentStoragePublicAccountName'),13)]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(14,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(14,variables('storageAccountPrefixesCount'))],variables('agentStoragePublicAccountName'),14)]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(15,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(15,variables('storageAccountPrefixesCount'))],variables('agentStoragePublicAccountName'),15)]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(16,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(16,variables('storageAccountPrefixesCount'))],variables('agentStoragePublicAccountName'),16)]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(17,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(17,variables('storageAccountPrefixesCount'))],variables('agentStoragePublicAccountName'),17)]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(18,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(18,variables('storageAccountPrefixesCount'))],variables('agentStoragePublicAccountName'),18)]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(19,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(19,variables('storageAccountPrefixesCount'))],variables('agentStoragePublicAccountName'),19)]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "sku": {
        "name": "Standard_A1",
        "tier": "Standard",
        "capacity": "[variables('agentPublicCount')]"
      },
      "properties": {
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk": {
              "vhdContainers": [
                "[concat('https://',variables('storageAccountPrefixes')[mod(0,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(0,variables('storageAccountPrefixesCount'))],variables('agentStoragePublicAccountName'),0,'.blob.core.windows.net/vmss1')]",
                "[concat('https://',variables('storageAccountPrefixes')[mod(1,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(1,variables('storageAccountPrefixesCount'))],variables('agentStoragePublicAccountName'),1, '.blob.core.windows.net/vmss1')]",
                "[concat('https://',variables('storageAccountPrefixes')[mod(2,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(2,variables('storageAccountPrefixesCount'))],variables('agentStoragePublicAccountName'),2, '.blob.core.windows.net/vmss1')]",
                "[concat('https://',variables('storageAccountPrefixes')[mod(3,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(3,variables('storageAccountPrefixesCount'))],variables('agentStoragePublicAccountName'),3, '.blob.core.windows.net/vmss1')]",
                "[concat('https://',variables('storageAccountPrefixes')[mod(4,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(4,variables('storageAccountPrefixesCount'))],variables('agentStoragePublicAccountName'),4, '.blob.core.windows.net/vmss1')]",
                "[concat('https://',variables('storageAccountPrefixes')[mod(5,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(5,variables('storageAccountPrefixesCount'))],variables('agentStoragePublicAccountName'),5, '.blob.core.windows.net/vmss1')]",
                "[concat('https://',variables('storageAccountPrefixes')[mod(6,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(6,variables('storageAccountPrefixesCount'))],variables('agentStoragePublicAccountName'),6, '.blob.core.windows.net/vmss1')]",
                "[concat('https://',variables('storageAccountPrefixes')[mod(7,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(7,variables('storageAccountPrefixesCount'))],variables('agentStoragePublicAccountName'),7, '.blob.core.windows.net/vmss1')]",
                "[concat('https://',variables('storageAccountPrefixes')[mod(8,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(8,variables('storageAccountPrefixesCount'))],variables('agentStoragePublicAccountName'),8, '.blob.core.windows.net/vmss1')]",
                "[concat('https://',variables('storageAccountPrefixes')[mod(9,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(9,variables('storageAccountPrefixesCount'))],variables('agentStoragePublicAccountName'),9, '.blob.core.windows.net/vmss1')]",
                "[concat('https://',variables('storageAccountPrefixes')[mod(10,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(10,variables('storageAccountPrefixesCount'))],variables('agentStoragePublicAccountName'),10, '.blob.core.windows.net/vmss1')]",
                "[concat('https://',variables('storageAccountPrefixes')[mod(11,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(11,variables('storageAccountPrefixesCount'))],variables('agentStoragePublicAccountName'),11, '.blob.core.windows.net/vmss1')]",
                "[concat('https://',variables('storageAccountPrefixes')[mod(12,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(12,variables('storageAccountPrefixesCount'))],variables('agentStoragePublicAccountName'),12, '.blob.core.windows.net/vmss1')]",
                "[concat('https://',variables('storageAccountPrefixes')[mod(13,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(13,variables('storageAccountPrefixesCount'))],variables('agentStoragePublicAccountName'),13, '.blob.core.windows.net/vmss1')]",
                "[concat('https://',variables('storageAccountPrefixes')[mod(14,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(14,variables('storageAccountPrefixesCount'))],variables('agentStoragePublicAccountName'),14, '.blob.core.windows.net/vmss1')]",
                "[concat('https://',variables('storageAccountPrefixes')[mod(15,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(15,variables('storageAccountPrefixesCount'))],variables('agentStoragePublicAccountName'),15, '.blob.core.windows.net/vmss1')]",
                "[concat('https://',variables('storageAccountPrefixes')[mod(16,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(16,variables('storageAccountPrefixesCount'))],variables('agentStoragePublicAccountName'),16, '.blob.core.windows.net/vmss1')]",
                "[concat('https://',variables('storageAccountPrefixes')[mod(17,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(17,variables('storageAccountPrefixesCount'))],variables('agentStoragePublicAccountName'),17, '.blob.core.windows.net/vmss1')]",
                "[concat('https://',variables('storageAccountPrefixes')[mod(18,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(18,variables('storageAccountPrefixesCount'))],variables('agentStoragePublicAccountName'),18, '.blob.core.windows.net/vmss1')]",
                "[concat('https://',variables('storageAccountPrefixes')[mod(19,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(19,variables('storageAccountPrefixesCount'))],variables('agentStoragePublicAccountName'),19, '.blob.core.windows.net/vmss1')]"
              ],
              "name": "vmssosdisk",
              "caching": "ReadOnly",
              "createOption": "FromImage"
            },
            "imageReference": {
              "publisher": "[variables('osImagePublisher')]",
              "offer": "[variables('osImageOffer')]",
              "sku": "[variables('osImageSKU')]",
              "version": "latest"
            }
          },
          "osProfile": {
            "computerNamePrefix": "[variables('agentPublicVMNamePrefix')]",
            "adminUsername": "[variables('adminUsername')]",
            "customData": {{ slave_public_cloud_config }},
            "linuxConfiguration": {
              "disablePasswordAuthentication": "true",
              "ssh": {
                "publicKeys": [
                  {
                    "path": "[variables('sshKeyPath')]",
                    "keyData": "[parameters('sshRSAPublicKey')]"
                  }
                ]
              }
            }
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "agentNodeNic",
                "properties": {
                  "primary": "true",
                  "ipConfigurations": [
                    {
                      "name": "nicipconfig",
                      "properties": {
                        "subnet": {
                          "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'), '/subnets/', variables('agentPublicSubnetName'))]"
                        },
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('agentsPublicLbName'), '/backendAddressPools/',variables('agentsPublicLbBackendPoolName'))]"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[concat(variables('storageAccountPrefixes')[mod(copyIndex(),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(copyIndex(),variables('storageAccountPrefixesCount'))],variables('agentStoragePrivateAccountName'),copyIndex())]",
      "apiVersion": "2015-06-15",
      "location": "[variables('storageLocation')]",
      "copy": {
        "name": "agentPrivateLoopNode",
        "count": "[variables('agentStorageAccountsCount')]"
      },
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "apiVersion": "2015-06-15",
      "name": "[concat(variables('agentPrivateVMNamePrefix'), 'vmss', copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "masterLbLoopNode",
        "count": "[variables('agentPrivateVMSSCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(0,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(0,variables('storageAccountPrefixesCount'))],variables('agentStoragePrivateAccountName'),0)]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(1,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(1,variables('storageAccountPrefixesCount'))],variables('agentStoragePrivateAccountName'),1)]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(2,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(2,variables('storageAccountPrefixesCount'))],variables('agentStoragePrivateAccountName'),2)]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(3,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(3,variables('storageAccountPrefixesCount'))],variables('agentStoragePrivateAccountName'),3)]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(4,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(4,variables('storageAccountPrefixesCount'))],variables('agentStoragePrivateAccountName'),4)]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(5,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(5,variables('storageAccountPrefixesCount'))],variables('agentStoragePrivateAccountName'),5)]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(6,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(6,variables('storageAccountPrefixesCount'))],variables('agentStoragePrivateAccountName'),6)]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(7,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(7,variables('storageAccountPrefixesCount'))],variables('agentStoragePrivateAccountName'),7)]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(8,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(8,variables('storageAccountPrefixesCount'))],variables('agentStoragePrivateAccountName'),8)]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(9,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(9,variables('storageAccountPrefixesCount'))],variables('agentStoragePrivateAccountName'),9)]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(10,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(10,variables('storageAccountPrefixesCount'))],variables('agentStoragePrivateAccountName'),10)]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(11,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(11,variables('storageAccountPrefixesCount'))],variables('agentStoragePrivateAccountName'),11)]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(12,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(12,variables('storageAccountPrefixesCount'))],variables('agentStoragePrivateAccountName'),12)]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(13,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(13,variables('storageAccountPrefixesCount'))],variables('agentStoragePrivateAccountName'),13)]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(14,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(14,variables('storageAccountPrefixesCount'))],variables('agentStoragePrivateAccountName'),14)]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(15,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(15,variables('storageAccountPrefixesCount'))],variables('agentStoragePrivateAccountName'),15)]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(16,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(16,variables('storageAccountPrefixesCount'))],variables('agentStoragePrivateAccountName'),16)]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(17,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(17,variables('storageAccountPrefixesCount'))],variables('agentStoragePrivateAccountName'),17)]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(18,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(18,variables('storageAccountPrefixesCount'))],variables('agentStoragePrivateAccountName'),18)]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(19,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(19,variables('storageAccountPrefixesCount'))],variables('agentStoragePrivateAccountName'),19)]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "sku": {
        "name": "Standard_A1",
        "tier": "Standard",
        "capacity": "[variables('agentPrivateCount')]"
      },
      "properties": {
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk": {
              "vhdContainers": [
                "[concat('https://',variables('storageAccountPrefixes')[mod(0,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(0,variables('storageAccountPrefixesCount'))],variables('agentStoragePrivateAccountName'),0,'.blob.core.windows.net/vmss1')]",
                "[concat('https://',variables('storageAccountPrefixes')[mod(1,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(1,variables('storageAccountPrefixesCount'))],variables('agentStoragePrivateAccountName'),1, '.blob.core.windows.net/vmss1')]",
                "[concat('https://',variables('storageAccountPrefixes')[mod(2,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(2,variables('storageAccountPrefixesCount'))],variables('agentStoragePrivateAccountName'),2, '.blob.core.windows.net/vmss1')]",
                "[concat('https://',variables('storageAccountPrefixes')[mod(3,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(3,variables('storageAccountPrefixesCount'))],variables('agentStoragePrivateAccountName'),3, '.blob.core.windows.net/vmss1')]",
                "[concat('https://',variables('storageAccountPrefixes')[mod(4,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(4,variables('storageAccountPrefixesCount'))],variables('agentStoragePrivateAccountName'),4, '.blob.core.windows.net/vmss1')]",
                "[concat('https://',variables('storageAccountPrefixes')[mod(5,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(5,variables('storageAccountPrefixesCount'))],variables('agentStoragePrivateAccountName'),5, '.blob.core.windows.net/vmss1')]",
                "[concat('https://',variables('storageAccountPrefixes')[mod(6,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(6,variables('storageAccountPrefixesCount'))],variables('agentStoragePrivateAccountName'),6, '.blob.core.windows.net/vmss1')]",
                "[concat('https://',variables('storageAccountPrefixes')[mod(7,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(7,variables('storageAccountPrefixesCount'))],variables('agentStoragePrivateAccountName'),7, '.blob.core.windows.net/vmss1')]",
                "[concat('https://',variables('storageAccountPrefixes')[mod(8,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(8,variables('storageAccountPrefixesCount'))],variables('agentStoragePrivateAccountName'),8, '.blob.core.windows.net/vmss1')]",
                "[concat('https://',variables('storageAccountPrefixes')[mod(9,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(9,variables('storageAccountPrefixesCount'))],variables('agentStoragePrivateAccountName'),9, '.blob.core.windows.net/vmss1')]",
                "[concat('https://',variables('storageAccountPrefixes')[mod(10,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(10,variables('storageAccountPrefixesCount'))],variables('agentStoragePrivateAccountName'),10, '.blob.core.windows.net/vmss1')]",
                "[concat('https://',variables('storageAccountPrefixes')[mod(11,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(11,variables('storageAccountPrefixesCount'))],variables('agentStoragePrivateAccountName'),11, '.blob.core.windows.net/vmss1')]",
                "[concat('https://',variables('storageAccountPrefixes')[mod(12,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(12,variables('storageAccountPrefixesCount'))],variables('agentStoragePrivateAccountName'),12, '.blob.core.windows.net/vmss1')]",
                "[concat('https://',variables('storageAccountPrefixes')[mod(13,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(13,variables('storageAccountPrefixesCount'))],variables('agentStoragePrivateAccountName'),13, '.blob.core.windows.net/vmss1')]",
                "[concat('https://',variables('storageAccountPrefixes')[mod(14,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(14,variables('storageAccountPrefixesCount'))],variables('agentStoragePrivateAccountName'),14, '.blob.core.windows.net/vmss1')]",
                "[concat('https://',variables('storageAccountPrefixes')[mod(15,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(15,variables('storageAccountPrefixesCount'))],variables('agentStoragePrivateAccountName'),15, '.blob.core.windows.net/vmss1')]",
                "[concat('https://',variables('storageAccountPrefixes')[mod(16,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(16,variables('storageAccountPrefixesCount'))],variables('agentStoragePrivateAccountName'),16, '.blob.core.windows.net/vmss1')]",
                "[concat('https://',variables('storageAccountPrefixes')[mod(17,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(17,variables('storageAccountPrefixesCount'))],variables('agentStoragePrivateAccountName'),17, '.blob.core.windows.net/vmss1')]",
                "[concat('https://',variables('storageAccountPrefixes')[mod(18,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(18,variables('storageAccountPrefixesCount'))],variables('agentStoragePrivateAccountName'),18, '.blob.core.windows.net/vmss1')]",
                "[concat('https://',variables('storageAccountPrefixes')[mod(19,variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(19,variables('storageAccountPrefixesCount'))],variables('agentStoragePrivateAccountName'),19, '.blob.core.windows.net/vmss1')]"
              ],
              "name": "vmssosdisk",
              "caching": "ReadOnly",
              "createOption": "FromImage"
            },
            "imageReference": {
              "publisher": "[variables('osImagePublisher')]",
              "offer": "[variables('osImageOffer')]",
              "sku": "[variables('osImageSKU')]",
              "version": "latest"
            }
          },
          "osProfile": {
            "computerNamePrefix": "[variables('agentPrivateVMNamePrefix')]",
            "adminUsername": "[variables('adminUsername')]",
            "customData": {{ slave_cloud_config }},
            "linuxConfiguration": {
              "disablePasswordAuthentication": "true",
              "ssh": {
                "publicKeys": [
                  {
                    "path": "[variables('sshKeyPath')]",
                    "keyData": "[parameters('sshRSAPublicKey')]"
                  }
                ]
              }
            }
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "agentPrivateNodeNic",
                "properties": {
                  "primary": "true",
                  "ipConfigurations": [
                    {
                      "name": "nicipconfig",
                      "properties": {
                        "subnet": {
                          "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'), '/subnets/', variables('agentPrivateSubnetName'))]"
                        }
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    }
  ],
  "outputs": {
    "masterFQDN": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))).dnsSettings.fqdn]"
    },
    "agentFQDN": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Network/publicIPAddresses/', variables('agentPublicIPAddressName'))).dnsSettings.fqdn]"
    }
  }
}

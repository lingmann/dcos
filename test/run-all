#!/bin/bash
set -euo pipefail

cleanup_nginx() {
  echo "Cleaning up Nginx container"
  set +e
  docker kill dcos_int_nginx
  docker rm dcos_int_nginx
  set -e
}

cleanup_zookeeper() {
  echo "Cleaning up Zookeeper container"
  set +e
  docker kill dcos_int_zk
  docker rm dcos_int_zk
  set -e
}

clean_all() {
  echo "Cleaning up remainig (if any) zookeeper and nginx Docker containers"
  cleanup_nginx
  cleanup_zookeeper
}

# Flag used so TeamCity can tell if the build passed or failed. On failure,
# TeamCity will get logs from vagrant if possible then cleanup all artifacts.
rm -rf PASSED

# Make sure we're running inside the test directory which contains the Vagrantfile
if [ ! -f Vagrantfile ]
then
  echo "run-all must be run with it's current working directory as the test folder"
  exit 1
fi

# Build a docker container for running py.test inside of.
docker build -t py.test - < py.test.Dockerfile

export MASTER_IP=172.17.10.101
export DCOS_DNS_ADDRESS=http://$MASTER_IP
export HOST_IP=$(ip addr show dev ${BR_DEVICE-virbr0}|awk '/inet / { print $2 }' |cut -d/ -f1)
export PLATFORMS="$@"

if [ -z "${HOST_IP// }" ]; then
    echo "Host ip has not been identified, aborting."
    exit 1
fi

mkdir -p genconf

cp ip-detect genconf/ip-detect
cat <<EOF > "genconf/config.json"
{
  "cluster_name":"test_cluster",
  "bootstrap_url":"http://$HOST_IP:8080",
  "resolvers":"[\"8.8.8.8\"]",
  "exhibitor_storage_backend": "zookeeper",
  "exhibitor_zk_hosts": "$HOST_IP:2181",
  "exhibitor_zk_path": "/test-cluster-discovery",
  "master_discovery": "static",
  "master_list": "[\"172.17.10.101\", \"172.17.10.102\", \"172.17.10.103\"]"
}
EOF

# Start nginx
echo "Starting Nginx"
cleanup_nginx
mkdir -p $PWD/genconf/serve
docker run -d -v $PWD/genconf/serve:/usr/share/nginx/html:ro -p 8080:80 --name=dcos_int_nginx nginx

for platform in $PLATFORMS; do

  # Cleanup zk to be safe
  cleanup_zookeeper

  # Generate the config packages
  echo "Generating config packages"
  bash ../dcos_generate_config.sh --installer-format $platform --config /genconf/config.json

  trap clean_all EXIT

  # Start zookeeper
  echo "Starting Zookeeper"
  docker run -d -p 2181:2181 -p 2888:2888 -p 3888:3888 --name=dcos_int_zk jplock/zookeeper

  # Launch the vagrant
  echo "Starting Vagrant VMs"
  PLATFORM=$platform vagrant up

  echo "Waiting for Mesos-DNS to come up and locate an elected mesos-master"
  until dig +short leader.mesos @$MASTER_IP > /dev/null 2>&1; do sleep 1; done

  echo "Waiting for WebUI to come up"
  while ! curl -LfsSo /dev/null $DCOS_DNS_ADDRESS; do sleep 1; done # Wait for web ui

  echo "Running integration test"
  if ! docker run -v $PWD/../integration_test.py:/integration_test.py -e DCOS_DNS_ADDRESS=$DCOS_DNS_ADDRESS --net=host py.test py.test /integration_test.py; then
    echo "TEST FAILED"
    exit 1
  fi

  echo "Cleaning up vagrant"
  vagrant destroy -f
done

touch PASSED

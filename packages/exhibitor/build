#!/bin/bash
set -o errexit -o nounset -o pipefail

mkdir -p "$PKG_PATH/usr"
cp -rp "/pkg/src/zookeeper" "$PKG_PATH/usr"
rm -rf "$PKG_PATH/usr/zookeeper/"{src,docs,contrib}

exhibitor_path="$PKG_PATH"/usr/exhibitor
mkdir -p "$exhibitor_path"
pushd "$exhibitor_path"
cp /pkg/src/exhibitor/exhibitor-standalone/src/main/resources/buildscripts/standalone/maven/pom.xml .
mvn clean package
ln -s target/exhibitor-1.5.5.jar exhibitor.jar
# Make sure we linked to something that exists
test -e exhibitor.jar
rm pom.xml
popd

# NOTE: These Exhibitor properties are used to first initialize the config in
# an empty S3 bucket. Any subsequent invocations of Exhibitor will use the
# config in the S3 bucket over the properties provided via --defaultconfig.
# Therefore, we must ensure these settings are valid for all pkgpanda versions
# of Exhibitor which run on the same cluster. This is why we do not use
# $PKG_PATH with the zookeeper-install-directory setting... if we did it will
# cause new instances to fail to join the cluster.
cat <<- EOF > "$PKG_PATH"/usr/exhibitor/defaults.conf
  zookeeper-data-directory=/var/lib/zookeeper/snapshot
  zookeeper-install-directory=/opt/mesosphere/active/exhibitor/usr/zookeeper
  zookeeper-log-directory=/var/lib/zookeeper/transactions
  log-index-directory=/var/lib/zookeeper/transactions
  cleanup-period-ms=300000
  check-ms=30000
  backup-period-ms=600000
  client-port=2181
  cleanup-max-files=20
  backup-max-store-ms=21600000
  connect-port=2888
  observer-threshold=0
  election-port=3888
  zoo-cfg-extra=tickTime\=2000&initLimit\=10&syncLimit\=5&quorumListenOnAllIPs\=true
  auto-manage-instances-settling-period-ms=0
  auto-manage-instances=1
  auto-manage-instances-fixed-ensemble-size=0
EOF

exhibitor_service="$PKG_PATH/dcos.target.wants_master/exhibitor.service"
mkdir -p $(dirname "$exhibitor_service")
cat <<- EOF > "$exhibitor_service"
  [Unit]
  Description=Exhibitor Zookeeper Supervisor
  [Service]
  Restart=always
  EnvironmentFile=/etc/environment
  EnvironmentFile=/opt/mesosphere/environment
  EnvironmentFile=/opt/mesosphere/etc/cloudenv
  EnvironmentFile=/opt/mesosphere/etc/zookeeper
  # run in new mount namespace to create custom resolv.conf
  ExecStart=/usr/bin/unshare --mount $PKG_PATH/usr/exhibitor/start_exhibitor.sh
EOF

exhibitor_start_wrapper="$PKG_PATH/usr/exhibitor/start_exhibitor.sh"
cat <<EOF > "$exhibitor_start_wrapper"
#!/bin/bash

/bin/mkdir -p /var/lib/zookeeper/snapshot
/bin/mkdir -p /var/lib/zookeeper/transactions
echo com.netflix.exhibitor.s3.access-key-id=\$AWS_ACCESS_KEY_ID > /etc/mesosphere/exhibitor_credentials.properties
echo com.netflix.exhibitor.s3.access-secret-key=\$AWS_SECRET_ACCESS_KEY >> /etc/mesosphere/exhibitor_credentials.properties
/usr/bin/sed -i "s#auto-manage-instances-fixed-ensemble-size=.*#auto-manage-instances-fixed-ensemble-size=\$ZOOKEEPER_CLUSTER_SIZE#" /opt/mesosphere/active/exhibitor/usr/exhibitor/defaults.conf

echo "nameserver \$FALLBACK_DNS" > /etc/resolv.conf.exhibitor
# do not propagate mounts to the previous namespaces
mount --make-rprivate /
# "overwrite" resolv.conf for exhibitor and all its children
mount --bind /etc/resolv.conf.exhibitor /etc/resolv.conf

exec /opt/mesosphere/bin/java -jar "$PKG_PATH/usr/exhibitor/exhibitor.jar" --port \$EXHIBITOR_WEB_UI_PORT --defaultconfig "$PKG_PATH/usr/exhibitor/defaults.conf" --configtype s3 --s3config "\$S3_BUCKET:\$S3_PREFIX" --s3credentials /etc/mesosphere/exhibitor_credentials.properties --s3region \$AWS_REGION --s3backup false --hostname \$EC2_PUBLIC_HOSTNAME
EOF
chmod +x "$exhibitor_start_wrapper"

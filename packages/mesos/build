#!/bin/bash
libdir="$PKG_PATH/lib"

# TODO(cmaloney): Check prerequisites installed (glog, protobuf, boost)
pushd "/pkg/src/mesos"
./bootstrap
popd

mkdir -p build
pushd build
# TODO(cmaloney): --with-glog=/usr --with-protobuf=/usr --with-boost=/usr
# TODO(cmaloney): DESTDIR builds so we don't have to build as root?
"/pkg/src/mesos/configure" \
  --prefix="$PKG_PATH" --enable-optimize --disable-python \
  --with-glog=/opt/mesosphere/active/mesos-buildenv \
  --with-protobuf=/opt/mesosphere/active/mesos-buildenv \
  --with-boost=/opt/mesosphere/active/mesos-buildenv \
# TODO(cmaloney): -j8 is almost certainly wrong.
make -j8

make install
cp src/java/target/mesos-*.jar "$libdir"
popd

mkdir -p "$PKG_PATH/bin"
ln -s "$PKG_PATH/sbin/mesos-master" "$PKG_PATH/bin/mesos-master"
ln -s "$PKG_PATH/sbin/mesos-slave" "$PKG_PATH/bin/mesos-slave"

# TODO(cmaloney): Make these a seperate mesos library package.
# Copy the shared libraries from the system which mesos requires
cp /usr/lib/x86_64-linux-gnu/libsasl2.so.2 "$libdir"
cp -r /usr/lib/x86_64-linux-gnu/sasl2 "$libdir"
cp /usr/lib/x86_64-linux-gnu/libsvn_delta-1.so.1 "$libdir"
cp /usr/lib/x86_64-linux-gnu/libsvn_subr-1.so.1 "$libdir"
cp /usr/lib/x86_64-linux-gnu/libapr-1.so.0 "$libdir"
cp /usr/lib/x86_64-linux-gnu/libaprutil-1.so.0 "$libdir"

systemd_master="$PKG_PATH"/dcos.target.wants_master/mesos-master.service
mkdir -p "$(dirname "$systemd_master")"
cat <<EOF > "$systemd_master"
[Unit]
Description=Mesos Master
[Service]
Restart=always
StartLimitInterval=0
RestartSec=15
EnvironmentFile=/opt/mesosphere/environment
EnvironmentFile=/opt/mesosphere/etc/mesos-master
EnvironmentFile=-/opt/mesosphere/etc/mesos-master-provider
EnvironmentFile=/opt/mesosphere/etc/cloudenv
ExecStartPre=/opt/mesosphere/bin/exhibitor_wait.py \$ZOOKEEPER_CLUSTER_SIZE
ExecStart=$PKG_PATH/sbin/mesos-master
EOF

systemd_slave="$PKG_PATH"/dcos.target.wants_slave/mesos-slave.service
mkdir -p "$(dirname "$systemd_slave")"
cat <<EOF > "$systemd_slave"
[Unit]
Description=Mesos Slave
[Service]
Restart=always
StartLimitInterval=0
RestartSec=5
KillMode=control-group
Delegate=true
LimitNOFILE=infinity
EnvironmentFile=/opt/mesosphere/environment
EnvironmentFile=/opt/mesosphere/etc/mesos-slave-common
EnvironmentFile=/opt/mesosphere/etc/mesos-slave
ExecStartPre=/bin/ping -c1 leader.mesos
ExecStart=$PKG_PATH/sbin/mesos-slave
EOF

systemd_slave_public="$PKG_PATH"/dcos.target.wants_slave_public/mesos-slave-public.service
mkdir -p "$(dirname "$systemd_slave_public")"
cat <<EOF > "$systemd_slave_public"
[Unit]
Description=Mesos Slave Public
[Service]
Restart=always
StartLimitInterval=0
RestartSec=5
KillMode=control-group
Delegate=true
LimitNOFILE=infinity
EnvironmentFile=/opt/mesosphere/environment
EnvironmentFile=/opt/mesosphere/etc/mesos-slave-common
EnvironmentFile=/opt/mesosphere/etc/mesos-slave-public
ExecStartPre=/bin/ping -c1 leader.mesos
ExecStart=$PKG_PATH/sbin/mesos-slave
EOF



echo "Finished building Mesos"

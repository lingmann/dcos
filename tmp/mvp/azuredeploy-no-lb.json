{
    "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "String",
            "defaultValue": "West US",
            "metadata": {
                 "Description": "Location of resources"
            }
        },
        "newStorageAccountName": {
            "type": "string",
            "metadata": {
                 "Description": "Name of the of the storage account for VM OS Disk"
            }
        },
        "vmNamePrefix": {
            "type": "string",
            "defaultValue": "msphere",
            "metadata": {
                 "Description": "Prefix for the names of the VMs"
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "myVNET",
            "metadata": {
                 "Description": "Name of the VNET hosting the VMs"
            }
        },
        "loadBalancerName": {
            "type": "string",
            "defaultValue": "myLB"
        },
        "vmSourceImageName": {
            "type": "string",
            "defaultValue": "2b171e93f07c4903bcad35bda10acf22__CoreOS-Stable-607.0.0",
            "metadata": {
                 "Description": "Name of the CoreOS image"
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_A1",
            "metadata": {
                 "Description": "Instance size for the VMs"
            }
        },
        "adminUserName": {
            "type": "string",
            "metadata": {
                 "Description": "Username to login to the VMs"
            }
        },
        "uuid": {
            "type": "string",
            "metadata": {
                 "Description": "Globally unique cluster id in the Azure namespace"
            }
        },
        "azureAccountName": {
            "type": "string",
            "metadata": {
                 "Description": "Azure account name used by Exhibitor to persist Zookeeper state"
            }
        },
        "azureAccountKey": {
            "type": "string",
            "metadata": {
                 "Description": "Azure account key used by Exhibitor to persist Zookeeper state"
            }
        },
        "sshKeyData": {
            "type": "string",
            "metadata": {
                 "Description": "Public key for SSH authentication"
            }
        }
    },
    "variables": {
        "numberOfNodes": 4,
        "addressPrefix": "10.0.0.0/16",
        "subnet1Name": "Subnet-1",
        "subnet1Prefix": "10.0.0.0/24",
        "vmStorageAccountContainerName": "vhds",
        "publicIPAddressType": "Dynamic",
        "storageAccountType": "Standard_LRS",
        "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
        "sourceImageName": "[concat('/',subscription().subscriptionId,'/services/images/',parameters('vmSourceImageName'))]",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
        "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',variables('subnet1Name'))]",

        "lbID": "[resourceId('Microsoft.Network/loadBalancers',parameters('loadBalancerName'))]",
        "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/LBFE')]",
        "lbPoolID": "[concat(variables('lbID'),'/backendAddressPools/LBBE')]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('newStorageAccountName')]",
            "location": "[parameters('location')]",
            "apiVersion": "2014-12-01-preview",
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat('publicIP', copyindex())]",
            "copy": {
                "name": "ipLoop",
                "count": "[variables('numberOfNodes')]"
            },
            "location": "[parameters('location')]",
            "apiVersion": "2014-12-01-preview",
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[concat(parameters('vmNamePrefix'), copyindex())]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "apiVersion": "2014-12-01-preview",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnet1Name')]",
                        "properties": {
                            "addressPrefix": "[variables('subnet1Prefix')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat('nic', copyindex())]",
            "copy": {
                "name": "nicLoop",
                "count": "[variables('numberOfNodes')]"
            },
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', 'publicIP', copyindex())]",
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
            ],
            "apiVersion": "2014-12-01-preview",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', concat('publicIP', copyindex()))]"
                            },
                            "subnet": {
                                "id": "[variables('subnet1Ref')]"
                            }
                        }
                    }
                ]
            }
        },

        {
            "apiVersion": "2014-12-01-preview",
            "type": "Microsoft.Compute/availabilitySets",
            "name": "mesos",
            "location": "[parameters('location')]",
            "properties": {
            }
        },

        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(parameters('vmNamePrefix'), copyindex())]",
            "copy": {
                "name": "virtualMachineLoop",
                "count": "[variables('numberOfNodes')]"
            },
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', 'nic', copyindex())]"
            ],
            "apiVersion": "2014-12-01-preview",
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', 'mesos')]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computername": "[concat(parameters('vmNamePrefix'), copyindex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "customData": "[parameters('customData')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": "true",
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[variables('sshKeyPath')]",
                                    "keyData": "[parameters('sshKeyData')]"
                                }
                            ]
                        }
                    }
                },
                "storageProfile": {
                    "sourceImage": {
                        "id": "[variables('sourceImageName')]"
                    },
                    "destinationVhdsContainer": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat('nic',copyindex()))]"
                        }
                    ]
                }
            }
        }
    ]
}

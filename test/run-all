#!/bin/bash
set -euo pipefail

cleanup_nginx_docker() {
  echo "Cleaning up Nginx container"
  set +e
  docker kill dcos_int_nginx
  docker rm dcos_int_nginx
  set -e
}

cleanup_zookeeper_docker() {
  echo "Cleaning up Zookeeper container"
  set +e
  docker kill dcos_int_zk
  docker rm dcos_int_zk
  set -e
}

cleanup_vagrant_leftovers() {
  echo "Cleaning up Vagrant leftovers (if any)"
  set +e
  for i in test_slave-01 test_slave-02 test_master-01 test_master-03 test_master-02
  do
    echo "Destroying Vagrant vm $i"
    virsh destroy $i && virsh undefine --remove-all-storage $i;
  done
  vagrant global-status --prune
  set -e
}

clean_all_dockers() {
  echo "Cleaning up zookeeper and nginx Docker containers"
  cleanup_nginx_docker
  cleanup_zookeeper_docker
}

# Flag used so TeamCity can tell if the build passed or failed. On failure,
# TeamCity will get logs from vagrant if possible then cleanup all artifacts.
rm -rf PASSED

# Make sure we're running inside the test directory which contains the Vagrantfile
if [ ! -f Vagrantfile ]
then
  echo "run-all must be run with it's current working directory as the test folder"
  exit 1
fi

# Build a docker container for running py.test inside of.
docker build -t py.test - < ../docker/py.test/Dockerfile

export MASTER_IP=172.17.10.101
export DCOS_DNS_ADDRESS=http://$MASTER_IP
export HOST_IP=$(ip addr show dev ${BR_DEVICE-virbr0}|awk '/inet / { print $2 }' |cut -d/ -f1)
export PLATFORM="$1"

if [ -z "${HOST_IP// }" ]; then
    echo "Host ip has not been identified, aborting."
    exit 1
fi

mkdir -p genconf

cp ip-detect genconf/ip-detect
cat <<EOF > "genconf/config.json"
{
  "cluster_name":"test_cluster",
  "bootstrap_url":"http://$HOST_IP:8080",
  "resolvers":"[\"8.8.8.8\"]",
  "exhibitor_storage_backend": "zookeeper",
  "exhibitor_zk_hosts": "$HOST_IP:2181",
  "exhibitor_zk_path": "/test-cluster-discovery",
  "master_discovery": "static",
  "master_list": "[\"172.17.10.101\", \"172.17.10.102\", \"172.17.10.103\"]"
}
EOF

clean_all_dockers
cleanup_vagrant_leftovers
trap clean_all_dockers EXIT

echo "Starting Nginx"
mkdir -p $PWD/genconf/serve
docker run -d -v $PWD/genconf/serve:/usr/share/nginx/html:ro -p 8080:80 --name=dcos_int_nginx nginx

echo "Starting Zookeeper"
docker run -d -p 2181:2181 -p 2888:2888 -p 3888:3888 --name=dcos_int_zk jplock/zookeeper

echo "Generating config packages"
bash ../dcos_generate_config.sh --installer-format $PLATFORM --config /genconf/config.json

echo "Starting Vagrant VMs"
vagrant up --provider=libvirt --no-parallel --debug

echo "Running integration test"
docker run -v $PWD/../integration_test.py:/integration_test.py \
    -e DCOS_DNS_ADDRESS=$DCOS_DNS_ADDRESS \
    -e ZK_HOSTS="172.17.10.101:2181,172.17.10.102:2181,172.17.10.103:2181" \
    --net=host py.test py.test -s /integration_test.py
export RET=$?

if [ $RET -ne 0 ]; then
  echo "TEST FAILED"
  exit 1
fi

echo "Cleaning up vagrant"
vagrant destroy -f

touch PASSED

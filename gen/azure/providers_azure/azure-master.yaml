write_files:
  - path: /etc/mesosphere/setup-packages/dcos-provider-azure--setup/pkginfo.json
    content: |
      {
        "environment": {
          "PROVIDER": "azure"
        }
      }
  - path: /etc/mesosphere/setup-packages/dcos-provider-azure--setup/etc/cloudenv
    content: |
      COREOS_PRIVATE_IPV4=$private_ipv4
      ZOOKEEPER_CLUSTER_SIZE=[[[parameters('numberOfMasters')]]]
  - path: /etc/mesosphere/setup-packages/dcos-provider-azure--setup/etc/mesos-master-provider
    content: |
      MESOS_CLUSTER=[[[variables('uniqueName')]]]
  - path: /etc/mesosphere/setup-packages/dcos-provider-azure--setup/etc/exhibitor
    content: |
      COREOS_PRIVATE_IPV4=$private_ipv4
      AZURE_CONTAINER=apollo-exhibitor
      AZURE_PREFIX=[[[variables('uniqueName')]]]
      AZURE_ACCOUNT_NAME=[[[variables('storageAccountName')]]]
      AZURE_ACCOUNT_KEY=[[[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1]]]
      EXHIBITOR_BACKEND=AZURE
      EXHIBITOR_WEB_UI_PORT=8181
  # Unsure if these exhibitor.properties keys or values are set correctly, key names
  # were guessed based on the format used for S3.
  - path: /etc/mesosphere/setup-packages/dcos-provider-azure--setup/etc/exhibitor.properties
    content: |
        com.netflix.exhibitor.azure.account-name=[[[variables('storageAccountName')]]]
        com.netflix.exhibitor.azure.account-key=[[[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1]]]
  - path: /etc/mesosphere/setup-packages/dcos-provider-azure--setup/etc/dns_config
    content: |-
      COREOS_PRIVATE_IPV4=$private_ipv4
      MASTER_SOURCE=exhibitor
      EXHIBITOR_ADDRESS=$private_ipv4
      RESOLVERS=168.63.129.16
  - path: /etc/mesosphere/setup-flags/repository-url
    content: "https://downloads.mesosphere.com/dcos/testing/continuous\n"
    owner: root
    permissions: 420
  - path: /etc/mesosphere/setup-flags/bootstrap-id
    content: "BOOTSTRAP_ID=7f1b6eaa4c10ccdd31b92a29aacec9b19ff0e4b7\n"
    owner: root
    permissions: 420
  - path: /etc/mesosphere/setup-flags/cluster-packages.json
    content: "[\"dcos-config--setup_b71605db34ba635fb3aac297e8eb24028b9256a8\", \"dcos-detect-ip--setup_b71605db34ba635fb3aac297e8eb24028b9256a8\"]"
    owner: root
    permissions: 420
  - path: /etc/mesosphere/roles/master
    content: ""
  - path: /etc/mesosphere/roles/azure_master
    content: ""
  - path: /etc/mesosphere/roles/azure
    content: ""

coreos:
  update:
    reboot-strategy: "off"
  units:
    - name: format-var-lib-ephemeral.service
      command: start
      content: |
        [Unit]
        Description=Formats the /var/lib ephemeral drive
        Before=var-lib.mount dbus.service
        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/bin/bash -c "(blkid -t TYPE=ext4 | grep sdb1) || (/usr/sbin/mkfs.ext4 -F /dev/sdb1)"
    - name: var-lib.mount
      command: start
      content: |
        [Unit]
        Description=Mount /var/lib
        Before=dbus.service
        [Mount]
        What=/dev/sdb1
        Where=/var/lib
        Type=ext4
    - name: etcd.service
      mask: true
      command: stop
    - name: update-engine.service
      mask: true
      command: stop
    - name: locksmithd.service
      mask: true
      command: stop
    - name: systemd-resolved.service
      command: stop
    - name: dcos-link-env.service
      command: start
      content: |
        [Unit]
        Before=dcos.target
        [Service]
        Type=oneshot
        ExecStartPre=/usr/bin/mkdir -p /etc/profile.d
        ExecStart=/usr/bin/ln -sf /opt/mesosphere/environment.export /etc/profile.d/dcos.sh
    - name: dcos-download.service
      content: |
        [Unit]
        Description=Download the DCOS
        After=network-online.target
        Wants=network-online.target
        ConditionPathExists=!/opt/mesosphere/
        [Service]
        EnvironmentFile=/etc/mesosphere/setup-flags/bootstrap-id
        Type=oneshot
        ExecStartPre=/usr/bin/bash -c "until curl -C - -o /tmp/bootstrap.tar.xz https://downloads.mesosphere.com/dcos/testing/continuous/bootstrap/${BOOTSTRAP_ID}.bootstrap.tar.xz; do echo failed to download; sleep 5; done"
        ExecStartPre=/usr/bin/mkdir -p /opt/mesosphere
        ExecStart=/usr/bin/tar -axf /tmp/bootstrap.tar.xz -C /opt/mesosphere
        ExecStartPost=-/usr/bin/rm -f /tmp/bootstrap.tar.xz
    - name: dcos-setup.service
      command: start
      enable: true
      content: |
        [Unit]
        Description=Prep the Pkgpanda working directories for this host.
        Requires=dcos-download.service
        After=dcos-download.service
        [Service]
        Type=oneshot
        EnvironmentFile=/opt/mesosphere/environment
        ExecStart=/opt/mesosphere/bin/pkgpanda setup --no-block-systemd
        [Install]
        WantedBy=multi-user.target
